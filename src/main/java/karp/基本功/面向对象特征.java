package karp.基本功;

/**
 * @Author: pjx
 * @Date: 2019/1/4 8:58
 * @Version 1.0
 *
 * 封装，继承，多态和抽象
 */
public class 面向对象特征 {
//    1.封装
//    封装给对象提供了隐藏内部特性和行为的能力。对象提供一些能被其他对象访问的方法来改
//    变它内部的数据。在 Java 当中，有 3 种修饰符： public， private 和 protected。每一种修饰符
//    给其他的位于同一个包或者不同包下面对象赋予了不同的访问权限。
//    下面列出了使用封装的一些好处：
//    通过隐藏对象的属性来保护对象内部的状态。
//    提高了代码的可用性和可维护性，因为对象的行为可以被单独的改变或者是扩展。
//    禁止对象之间的不良交互提高模块化
//     2.继承
//    继承给对象提供了从基类获取字段和方法的能力。继承提供了代码的重用行，也可以在不修改类的情况下给现存的类添加新特性。
//
//    3.多态
//    多态是编程语言给不同的底层数据类型做相同的接口展示的一种能力。一个多态类型上的操作可以应用到其他类型的值上面。
//
//    4.抽象
//    抽象是把想法从具体的实例中分离出来的步骤，因此，要根据他们的功能而不是实现细节来创建类。 Java 支持创建只暴漏接口而不包含方法实现的抽象的类。这种抽象技术的主要目的是把类的行为和实现细节分离开。
//            ---------------------
//    作者：cjbi
//    来源：CSDN
//    原文：https://blog.csdn.net/u010697681/article/details/79414112
//    版权声明：本文为博主原创文章，转载请附上博文链接！
}
